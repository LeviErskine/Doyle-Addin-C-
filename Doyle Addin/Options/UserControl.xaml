<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
	x:Class="Doyle_Addin.Options.UserOptionsWindow"
	mc:Ignorable="d"
	Title="Options"
	Height="208" Width="480"
	FontFamily="Tahoma"
	WindowStartupLocation="CenterScreen"
	Loaded="UserOptionsWindow_Loaded" WindowStyle="None" AllowsTransparency="True" SnapsToDevicePixels="True"
	ResizeMode="NoResize" ShowInTaskbar="False" SizeToContent="WidthAndHeight" Topmost="True" Background="Transparent">

	<Window.Resources>
		<!-- Theme ResourceDictionaries are external (Options/Themes/*.xaml) and are merged at runtime by code. -->

		<!-- Implicit style to give all Buttons rounded corners within this window -->
		<Style TargetType="{x:Type Button}">
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Padding" Value="6,3" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" SnapsToDevicePixels="True">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBrush}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="border" Property="Opacity" Value="0.6" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Implicit style for ui:TextBox to provide rounded corners and consistent visuals -->
		<Style TargetType="{x:Type ui:TextBox}">
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
			<Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Padding" Value="4" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ui:TextBox}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Margin="0" Background="Transparent" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorderBrush}" />
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxFocusBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="border" Property="Opacity" Value="0.6" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Border x:Name="MainWindowBorder"
			Background="{DynamicResource WindowBackgroundBrush}"
			CornerRadius="5"
			BorderBrush="{DynamicResource BorderBrush}"
			BorderThickness="4"
			Padding="16" UseLayoutRounding="True" ClipToBounds="True" ScrollViewer.VerticalScrollBarVisibility="Disabled"
			Width="480" Height="208" IsEnabled="True">

		<Grid Margin="0,0,0,-10">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="32" />
				<RowDefinition Height="48" />
			</Grid.RowDefinitions>

			<!-- Input Sections -->
			<Grid x:Name="Grid" Grid.Row="0" VerticalAlignment="Center" Margin="0,0,0,8">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="96" />
				</Grid.ColumnDefinitions>
				<Label x:Name="Label" Content="Print Export Location" FontFamily="Segoe UI" FontSize="12" Grid.Column="0"
					   Foreground="{DynamicResource ControlForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" />
				<ui:TextBox x:Name="PexLoc" Grid.Column="1" Margin="8,0,0,0" Padding="4" FontFamily="Segoe UI"
							PlaceholderText="P:\"
							Text="{Binding PrintExportLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				<Button Content="Browse" Grid.Column="2" Padding="0,4" FontFamily="Segoe UI" FontSize="12" Width="88"
						VerticalAlignment="Center" Margin="8,0,0,0" UseLayoutRounding="True"
						Click="PrintExportLocationButton_Click" Height="25" />
			</Grid>

			<Grid Grid.Row="1" VerticalAlignment="Center" Margin="0,0,0,8">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="96" />
				</Grid.ColumnDefinitions>
				<Label Content="DXF Export Location" FontFamily="Segoe UI" FontSize="12" Grid.Column="0"
					   Foreground="{DynamicResource ControlForegroundBrush}"
					   VerticalAlignment="Center" HorizontalAlignment="Left"
					   Width="{Binding ActualWidth, ElementName=Label, Mode=OneWay}" />
				<ui:TextBox x:Name="DxFexLoc" Grid.Column="1" Margin="8,0,0,0" Padding="4" FontFamily="Segoe UI"
							Width="{Binding ActualWidth, ElementName=PexLoc, Mode=OneWay}" PlaceholderText="X:\"
							Text="{Binding DxfExportLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				<Button Content="Browse" Grid.Column="2" Padding="0,2" FontFamily="Segoe UI" FontSize="12" Height="25" Width="88"
						VerticalAlignment="Center" Margin="8,0,0,0" UseLayoutRounding="True" Click="DXFExportLocationButton_Click" />
			</Grid>

			<!-- Checkbox -->
			<CheckBox x:Name="ChkObsoletePrint" FontFamily="Segoe UI"
					  FontSize="12"
					  Grid.Row="2" Content="Enable Obsolete Print"
					  HorizontalAlignment="Left"
					  Background="{DynamicResource ControlBackgroundBrush}"
					  BorderBrush="{DynamicResource TextBoxBorderBrush}"
					  Margin="0,0,0,0" VerticalAlignment="Center" IsChecked="{Binding EnableObsoletePrint, Mode=TwoWay}"
					  Foreground="{DynamicResource ControlForegroundBrush}">
				<CheckBox.Style>
					<Style TargetType="{x:Type CheckBox}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type CheckBox}">
									<StackPanel Orientation="Horizontal">
										<Border Width="16" Height="16" Background="{TemplateBinding Background}"
												BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="0,0,8,0">
											<Path x:Name="CheckMark" Visibility="Collapsed" Data="M2,8 L6,12 L14,2"
												  Stroke="{TemplateBinding Foreground}" StrokeThickness="2" StrokeLineJoin="Round"
												  StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
										</Border>
										<ContentPresenter VerticalAlignment="Center" RecognizesAccessKey="True" />
									</StackPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsChecked" Value="True">
											<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</CheckBox.Style>
			</CheckBox>
			<!-- Information Message -->
			<Label x:Name="FutureMsg"
				   FontFamily="Segoe UI"
				   Grid.Row="2"
				   Content="More options planned for the future"
				   Background="Transparent"
				   Foreground="{DynamicResource InfoForegroundBrush}"
				   BorderThickness="0"
				   FontSize="13" Margin="162,0,6,6" d:LayoutOverrides="Height" VerticalAlignment="Center"
				   HorizontalAlignment="Center" />
			<Grid Grid.Row="3" Margin="0,24,0,-16" HorizontalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Button x:Name="Button" Content="Save" FontFamily="Segoe UI" FontSize="13" Grid.Column="0" Margin="56,0,8,0"
						VerticalAlignment="Center" UseLayoutRounding="True" Click="BtnSave_Click" Height="25" Width="150" />
				<Button Content="Cancel" FontFamily="Segoe UI" FontSize="13" Grid.Column="1" Margin="8,0,56,0"
						VerticalAlignment="Center" UseLayoutRounding="True" Click="BtnCncl_Click"
						Height="{Binding ActualHeight, ElementName=Button, Mode=OneWay}"
						Width="{Binding ActualWidth, ElementName=Button, Mode=OneWay}" />
			</Grid>

		</Grid>
	</Border>
</Window>